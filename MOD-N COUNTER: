//DESIGN MODULE:

module mod_n_counter_design
# (parameter N = 10,  
     parameter WIDTH = 4)  
  ( input   clk,  
    input   rstn,  
    output  reg[WIDTH-1:0] out);   
  always @ (posedge clk) begin  
    if (!rstn) begin  
      out <= 0;  
    end else begin  
      if (out == N-1)  
        out <= 0;  
      else  
        out <= out + 1;  
    end  
  end
endmodule

//TESTBENCH MODULE:

module mod_n_counter_tb;
  parameter N = 10;  
  parameter WIDTH = 4;  
  reg clk;  
  reg rstn;  
  wire [WIDTH-1:0] out;  
  mod_n_counter_design dut(.clk(clk), .rstn(rstn), .out(out));  
  always #10 clk = ~clk;  
  initial begin  
    {clk, rstn} <= 0;  
    repeat(2) @ (posedge clk);  
    rstn <= 1;  
    repeat(20) @ (posedge clk);  
    $finish;  
  end
endmodule
